// isr_installer.c is an automatically generated file. Do not edit directly.
//
// Interrupt Service Routines
// These are the procedures which are directly referenced by the IDT.
// Though, all are simply assembly wrappers which call the high-level dispatcher.

#include <idt.h>
#include <string.h>

// These wrappers are defined in isr_wrapper_asm.S
<% [0..14, 16..19, 32..255].map { |r| Array(r) }.inject( :+ ).each do |isr| %>
void isr_wrapper_<%= isr %>(void);<% end %>

void isr_install(IDTEntry *idt)
{
    memset(idt, 0, sizeof(IDTEntry) * IDT_MAX);
    
#ifdef __i386__
    <% [0..14, 16..19, 32..255].map { |r| Array(r) }.inject( :+ ).each do |isr| %>
    idt_build_entry(&idt[<%= isr %>], (uint32_t)isr_wrapper_<%= isr %>, TRAP_GATE, 0);<% end %>
#else
    // stub
    <% [0..14, 16..19, 32..255].map { |r| Array(r) }.inject( :+ ).each do |isr| %>
    idt_build_entry(&idt[<%= isr %>], 0, TRAP_GATE, 0);<% end %>
#endif

    lidt(idt, sizeof(IDTEntry) * IDT_MAX - 1);
}
